{
  "ast": null,
  "code": "var _jsxFileName = \"/Users/angelo.cordon/workspace/codebuddies/frontend/src/components/Auth/LoginForm.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, Redirect } from 'react-router-dom';\nimport { Box, Button, TextField } from '@material-ui/core/';\nimport { useAuth } from './AuthContext';\nimport axios from 'axios';\n\nconst LoginForm = ({\n  toggleActiveForm\n}) => {\n  const {\n    0: username,\n    1: setUsername\n  } = useState(null);\n  const {\n    0: password,\n    1: setPassword\n  } = useState(null);\n  const {\n    0: isLoggedIn,\n    1: setIsLoggedIn\n  } = useState(false);\n  const {\n    0: errorMessage,\n    1: setErrorMessage\n  } = useState(null);\n  const auth = useAuth();\n  const referer = '/profile';\n\n  const handleLogin = e => {\n    e.preventDefault();\n    const data = {\n      username,\n      password\n    };\n    axios.post('/auth/obtain_token/', data).then(res => {\n      auth.setAuthTokens(res.data);\n      setIsLoggedIn(true);\n    }).catch(error => {\n      if (error.response) {\n        setErrorMessage(error.response.data.non_field_errors[0]);\n      } else {\n        setErrorMessage('There was an error!');\n      }\n    });\n  };\n\n  if (isLoggedIn) {\n    return __jsx(Redirect, {\n      to: referer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return __jsx(React.Fragment, null, auth && auth.authTokens || isLoggedIn ? __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"Welcome!\") : __jsx(Box, {\n    component: \"form\",\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    noValidate: true,\n    autoComplete: \"off\",\n    onSubmit: handleLogin,\n    \"data-testid\": \"loginForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, __jsx(Box, {\n    component: \"h1\",\n    fontSize: 18,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, \"Log in\"), __jsx(TextField, {\n    id: \"username\",\n    label: \"username\",\n    fullWidth: true,\n    required: true,\n    variant: \"outlined\",\n    margin: \"dense\",\n    type: \"text\",\n    onChange: e => setUsername(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }), __jsx(TextField, {\n    id: \"password\",\n    label: \"Password\",\n    fullWidth: true,\n    required: true,\n    variant: \"outlined\",\n    margin: \"dense\",\n    type: \"password\",\n    onChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }), errorMessage && __jsx(Box, {\n    color: \"error.main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 28\n    }\n  }, \" \", errorMessage), __jsx(Box, {\n    width: \"100%\",\n    marginTop: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, \"Log in\")), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, \"Need an account?\", toggleActiveForm ? __jsx(Box, {\n    component: \"button\",\n    color: \"primary.main\",\n    padding: 0,\n    marginLeft: 1,\n    border: 0,\n    bgcolor: \"transparent\",\n    fontSize: 16,\n    onClick: toggleActiveForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, \"Sign up\") : __jsx(Link, {\n    to: \"/signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  }, \"Sign up\"), \".\")));\n};\n\nconst {\n  func\n} = PropTypes;\nLoginForm.propTypes = {\n  toggleActiveForm: func\n};\nexport default LoginForm;",
  "map": {
    "version": 3,
    "sources": [
      "/Users/angelo.cordon/workspace/codebuddies/frontend/src/components/Auth/LoginForm.js"
    ],
    "names": [
      "React",
      "useState",
      "PropTypes",
      "Link",
      "Redirect",
      "Box",
      "Button",
      "TextField",
      "useAuth",
      "axios",
      "LoginForm",
      "toggleActiveForm",
      "username",
      "setUsername",
      "password",
      "setPassword",
      "isLoggedIn",
      "setIsLoggedIn",
      "errorMessage",
      "setErrorMessage",
      "auth",
      "referer",
      "handleLogin",
      "e",
      "preventDefault",
      "data",
      "post",
      "then",
      "res",
      "setAuthTokens",
      "catch",
      "error",
      "response",
      "non_field_errors",
      "authTokens",
      "target",
      "value",
      "func",
      "propTypes"
    ],
    "mappings": "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",
    "sourcesContent": [
      "import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, Redirect } from 'react-router-dom';\nimport { Box, Button, TextField } from '@material-ui/core/';\nimport { useAuth } from './AuthContext';\nimport axios from 'axios';\n\nconst LoginForm = ({ toggleActiveForm }) => {\n  const [username, setUsername] = useState(null);\n  const [password, setPassword] = useState(null);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const auth = useAuth();\n  const referer = '/profile';\n\n  const handleLogin = e => {\n    e.preventDefault();\n    const data = {\n      username,\n      password,\n    };\n    axios\n      .post('/auth/obtain_token/', data)\n      .then(res => {\n        auth.setAuthTokens(res.data);\n        setIsLoggedIn(true);\n      })\n      .catch(error => {\n        if (error.response) {\n          setErrorMessage(error.response.data.non_field_errors[0]);\n        } else {\n          setErrorMessage('There was an error!');\n        }\n      });\n  };\n\n  if (isLoggedIn) {\n    return <Redirect to={referer} />;\n  }\n  return (\n    <>\n      {(auth && auth.authTokens) || isLoggedIn ? (\n        <p>Welcome!</p>\n      ) : (\n        <Box\n          component=\"form\"\n          display=\"flex\"\n          flexWrap=\"wrap\"\n          noValidate\n          autoComplete=\"off\"\n          onSubmit={handleLogin}\n          data-testid=\"loginForm\"\n        >\n          <Box component=\"h1\" fontSize={18}>\n            Log in\n          </Box>\n          <TextField\n            id=\"username\"\n            label=\"username\"\n            fullWidth\n            required\n            variant=\"outlined\"\n            margin=\"dense\"\n            type=\"text\"\n            onChange={e => setUsername(e.target.value)}\n          />\n          <TextField\n            id=\"password\"\n            label=\"Password\"\n            fullWidth\n            required\n            variant=\"outlined\"\n            margin=\"dense\"\n            type=\"password\"\n            onChange={e => setPassword(e.target.value)}\n          />\n\n          {errorMessage && <Box color=\"error.main\"> {errorMessage}</Box>}\n\n          <Box width=\"100%\" marginTop={2}>\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n              Log in\n            </Button>\n          </Box>\n\n          <p>\n            Need an account?\n            {toggleActiveForm ? (\n              <Box\n                component=\"button\"\n                color=\"primary.main\"\n                padding={0}\n                marginLeft={1}\n                border={0}\n                bgcolor=\"transparent\"\n                fontSize={16}\n                onClick={toggleActiveForm}\n              >\n                Sign up\n              </Box>\n            ) : (\n              <Link to=\"/signup\">Sign up</Link>\n            )}\n            .\n          </p>\n        </Box>\n      )}\n    </>\n  );\n};\n\nconst { func } = PropTypes;\n\nLoginForm.propTypes = {\n  toggleActiveForm: func,\n};\n\nexport default LoginForm;\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
