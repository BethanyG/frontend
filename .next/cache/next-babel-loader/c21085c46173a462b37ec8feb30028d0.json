{
  "ast": null,
  "code": "import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst createValidationResolver = schema => {\n  return data => {\n    const {\n      error,\n      value: values\n    } = schema.validate(data, {\n      abortEarly: false\n    });\n    return {\n      values: error ? {} : values,\n      errors: error ? error.details.reduce((previous, currentError) => {\n        return _objectSpread(_objectSpread({}, previous), {}, {\n          [currentError.path[0]]: currentError\n        });\n      }, {}) : {}\n    };\n  };\n};\n\nexport default createValidationResolver;",
  "map": {
    "version": 3,
    "sources": [
      "/Users/angelo.cordon/workspace/codebuddies/frontend/src/components/form/createValidationResolver.js"
    ],
    "names": [
      "createValidationResolver",
      "schema",
      "data",
      "error",
      "value",
      "values",
      "validate",
      "abortEarly",
      "errors",
      "details",
      "reduce",
      "previous",
      "currentError",
      "path"
    ],
    "mappings": ";;;;;;AAAA,MAAMA,wBAAwB,GAAGC,MAAM,IAAI;AACzC,SAAOC,IAAI,IAAI;AACb,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,KAAK,EAAEC;AAAhB,QAA2BJ,MAAM,CAACK,QAAP,CAAgBJ,IAAhB,EAAsB;AACrDK,MAAAA,UAAU,EAAE;AADyC,KAAtB,CAAjC;AAIA,WAAO;AACLF,MAAAA,MAAM,EAAEF,KAAK,GAAG,EAAH,GAAQE,MADhB;AAELG,MAAAA,MAAM,EAAEL,KAAK,GACTA,KAAK,CAACM,OAAN,CAAcC,MAAd,CAAqB,CAACC,QAAD,EAAWC,YAAX,KAA4B;AAC/C,+CACKD,QADL;AAEE,WAACC,YAAY,CAACC,IAAb,CAAkB,CAAlB,CAAD,GAAwBD;AAF1B;AAID,OALD,EAKG,EALH,CADS,GAOT;AATC,KAAP;AAWD,GAhBD;AAiBD,CAlBD;;AAoBA,eAAeZ,wBAAf",
    "sourcesContent": [
      "const createValidationResolver = schema => {\n  return data => {\n    const { error, value: values } = schema.validate(data, {\n      abortEarly: false,\n    });\n\n    return {\n      values: error ? {} : values,\n      errors: error\n        ? error.details.reduce((previous, currentError) => {\n            return {\n              ...previous,\n              [currentError.path[0]]: currentError,\n            };\n          }, {})\n        : {},\n    };\n  };\n};\n\nexport default createValidationResolver;\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
